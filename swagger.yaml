openapi: 3.0.0
paths:
  /:
    get:
      operationId: AppController_getHello
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
  /signin:
    post:
      operationId: AuthController_signin
      summary: Войти в систему
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: Успешный вход в систему
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    description: accessToken по умолчанию действует 1 день
                  refreshToken:
                    type: string
                    description: refreshToken по умолчанию действует 7 дней
        '401':
          description: Неверное имя пользователя или пароль
      tags: &ref_0
        - auth
  /signup:
    post:
      operationId: AuthController_signup
      summary: Регистрация
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProfileDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
      tags: *ref_0
  /refresh-token:
    post:
      operationId: AuthController_refreshToken
      summary: Обновить токен
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
      responses:
        '201':
          description: accessToken успешно обновлен
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    description: accessToken по умолчанию действует 1 день
                  refreshToken:
                    type: string
                    description: refreshToken по умолчанию действует 7 дней
      tags: *ref_0
  /bots:
    get:
      operationId: BotsController_findMy
      summary: Список ботов пользователя
      parameters: []
      responses:
        '200':
          description: ''
      tags: &ref_1
        - bots
    post:
      operationId: BotsController_create
      summary: Создание нового бота
      parameters: []
      responses:
        '201':
          description: ''
      tags: *ref_1
  /bots/{id}:
    delete:
      operationId: BotsController_remove
      summary: Удаление бота
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags: *ref_1
    post:
      operationId: BotsController_copy
      summary: Копирование бота
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '201':
          description: ''
      tags: *ref_1
    patch:
      operationId: BotsController_update
      summary: Смена имени бота
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                botName:
                  type: string
      responses:
        '200':
          description: ''
      tags: *ref_1
    get:
      operationId: BotsController_findOne
      summary: Данные бота пользователя
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags: *ref_1
  /bots/{id}/notificationLinks:
    get:
      operationId: BotsController_notificationLinks
      summary: Настройки уведомлений бота
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags: *ref_1
  /bots/{id}/link:
    get:
      operationId: BotsController_getLink
      summary: Ссылка на бота
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags: *ref_1
  /bots/{id}/share:
    post:
      operationId: BotsController_share
      summary: Поделиться доступом к боту
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '201':
          description: ''
      tags: *ref_1
  /botTemplates:
    get:
      operationId: botTemplatesController_findAll
      summary: Список шаблонов ботов
      parameters: []
      responses:
        '200':
          description: ''
      tags: &ref_2
        - botTemplates
  /botTemplates/{id}:
    get:
      operationId: botTemplatesController_findOne
      summary: Данные шаблона бота
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags: *ref_2
  /profiles:
    post:
      operationId: ProfilesController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProfileDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
  /platforms:
    post:
      operationId: PlatformController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlatformDto'
      responses:
        '201':
          description: The record has been successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Platform'
      tags: &ref_3
        - Platforms
    get:
      operationId: PlatformController_findAll
      parameters: []
      responses:
        '200':
          description: The resources were returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Platform'
        '403':
          description: Unauthorized Request
      tags: *ref_3
  /platforms/{id}:
    get:
      operationId: PlatformController_findOne
      parameters:
        - name: id
          required: true
          in: path
          description: Индификатор платформы
          example: 64f81ba37571bfaac18a857f
          schema:
            type: string
      responses:
        '200':
          description: The resource was returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Platform'
        '403':
          description: Unauthorized Request
        '404':
          description: Resource not found
      tags: *ref_3
    patch:
      operationId: PlatformController_update
      parameters:
        - name: id
          required: true
          in: path
          description: Индификатор платформы
          example: 64f81ba37571bfaac18a857f
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlatformDto'
      responses:
        '200':
          description: The resource was updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Platform'
        '403':
          description: Unauthorized Request
        '404':
          description: Resource not found
        '422':
          description: Bad Request
      tags: *ref_3
    delete:
      operationId: PlatformController_remove
      parameters:
        - name: id
          required: true
          in: path
          description: Индификатор платформы
          example: 64f81ba37571bfaac18a857f
          schema:
            type: string
      responses:
        '200':
          description: The resource was returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Platform'
        '403':
          description: Unauthorized Request
        '404':
          description: Resource not found
      tags: *ref_3
  /tariffs:
    get:
      operationId: TariffsController_findAll
      summary: Получить все тарифы
      parameters: []
      responses:
        '200':
          description: Будет получен массив тарифов
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    price:
                      type: number
                    created_at:
                      type: string
                    updated_at:
                      type: string
        '404':
          description: Нет ни одного тарифа
      tags: &ref_3
        - tariffs
    post:
      operationId: TariffsController_create
      summary: Добавить новый тариф
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTariffDto'
      responses:
        '200':
          description: Будет добавлен новый тариф
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  price:
                    type: number
                  created_at:
                    type: string
                  updated_at:
                    type: string
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tariff'
        '404':
          description: Нет тарифа с таким id
      tags: *ref_3
  /tariffs/{id}:
    get:
      operationId: TariffsController_findOne
      summary: Получить тариф по id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Будет получен конкретный тариф по id
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  price:
                    type: number
                  created_at:
                    type: string
                  updated_at:
                    type: string
        '404':
          description: Нет тарифа с таким id
      tags: *ref_3
    patch:
      operationId: TariffsController_updateTariff
      summary: Изменить данные тарифа по id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTariffDto'
      responses:
        '200':
          description: Будет изменен тариф с указанным id
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  price:
                    type: number
                  created_at:
                    type: string
                  updated_at:
                    type: string
        '404':
          description: Такого тарифа нет
      tags: *ref_3
    delete:
      operationId: TariffsController_remove
      summary: Удалить тариф по id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Будет удален тариф с указанным id
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  price:
                    type: number
                  created_at:
                    type: string
                  updated_at:
                    type: string
        '404':
          description: Такого тарифа нет
      tags: *ref_3
info:
  title: API BotKits
  description: Ручки для команды frontend
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  schemas:
    CreateProfileDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
        telephone:
          type: string
      required:
        - username
        - password
        - email
        - telephone
    Profile:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        refreshToken:
          type: string
        phone:
          type: string
        avatar:
          type: string
        balance:
          type: number
        promoCodes:
          type: array
          items:
            type: string
        subscriptionId:
          type: string
      required:
        - username
        - password
        - refreshToken
        - phone
        - avatar
        - balance
        - promoCodes
        - subscriptionId
    CreateTariffDto:
      type: object
      properties:
        name:
          type: string
        price:
          type: number
      required:
        - name
        - price
    Tariff:
      type: object
      properties:
        name:
          type: string
        price:
          type: number
        created_at:
          type: string
        updated_at:
          type: string
      required:
        - name
        - price
        - created_at
        - updated_at
    UpdateTariffDto:
      type: object
      properties:
        name:
          type: string
        price:
          type: number
      required:
        - name
        - price
    FormFields:
      type: object
      properties:
        name:
          type: boolean
          example: true
        pages:
          type: boolean
          example: true
        accessKey:
          type: boolean
          example: false
        url:
          type: boolean
          example: true
      required:
        - name
        - pages
        - accessKey
        - url
    CreatePlatformDto:
      type: object
      properties:
        icon:
          type: string
          example: >-
            https://cdn.icon-icons.com/icons2/1233/PNG/512/1492718766-vk_83600.png
        title:
          type: string
          example: VK
        formFields:
          $ref: '#/components/schemas/FormFields'
      required:
        - icon
        - title
        - formFields
    Platform:
      type: object
      properties:
        icon:
          type: string
          example: >-
            https://cdn.icon-icons.com/icons2/1233/PNG/512/1492718766-vk_83600.png
        title:
          type: string
          example: VK
        formFields:
          example:
            name: true
            pages: true
            accessKey: false
            url: true
          allOf:
            - $ref: '#/components/schemas/FormFields'
      required:
        - icon
        - title
        - formFields
    UpdatePlatformDto:
      type: object
      properties:
        icon:
          type: string
          example: >-
            https://cdn.icon-icons.com/icons2/1233/PNG/512/1492718766-vk_83600.png
        title:
          type: string
          example: VK
        formFields:
          $ref: '#/components/schemas/FormFields'
